@using System.Text.RegularExpressions
@inject IWebHostEnvironment webHostEnvironment

<h3>Proto file</h3>

<p>This proto file describes the interface you should use to communicate with the game server. For more information on setting up the connection and starting a game, go the general documention. (TODO).</p>

<pre class="code"><code class="language-protobuf">@GetFileContent()</code></pre>

@code {
	private static readonly Regex LevelPattern = new Regex(@"^\s*// Level (\d+) and up:$");
	private static readonly Regex EndOfBlockPattern = new Regex(@"^\s*\}$");

	[Parameter]
	public int Level { get; set; } = 0;

	string GetFileContent()
	{
		try
		{
			// Read full proto file
			var path = Path.Combine(webHostEnvironment.WebRootPath, "swoq.proto");
			var lines = File.ReadAllLines(path);

			// Filer out all lines of too high levels
			var filtered = new List<string>();
			bool hide = false;
			foreach (var line in lines)
			{
				if (!hide)
				{
					// Check if line defines level
					var match = LevelPattern.Match(line);
					if (match.Success)
					{
						var lineLevel = int.Parse(match.Groups[1].Value);

						// Level too high, then hide from here
						if (lineLevel > Level) hide = true;
					}
				}
				else if (EndOfBlockPattern.Match(line).Success)
				{
					// Stop hiding at end of a block (i.e. }).
					hide = false;
				}

				if (!hide)
				{
					filtered.Add(line);

					if (filtered.Count >= 2)
					{
						// Remove empty blocks (i.e. enums)
						if (filtered[^2].EndsWith("{") && filtered[^1].StartsWith("}"))
						{
							filtered = filtered[..^2];
						}
						// Remove second consecutive white line
						if (string.IsNullOrWhiteSpace(filtered[^2]) && string.IsNullOrWhiteSpace(filtered[^1]))
						{
							filtered = filtered[..^1];
						}
					}
				}
			}

			return string.Join("\n", filtered);
		}
		catch
		{
			return "";
		}
	}
}
