@page "/user/"

@rendermode InteractiveServer

@using Swoq.Data

@inject UserService UserService
@inject IJSRuntime JSRuntime

@if (CurrentUser == null)
{
	<PageTitle>SWOQ - User</PageTitle>

	<h1>User</h1>

	<p>This page is only accessable for logged in users. Please <a href="login">login</a> first.</p>
}
else
{
	<PageTitle>SWOQ - User - @CurrentUser.Name</PageTitle>

	<h1>Hi @CurrentUser.Name</h1>

	@if (Welcome)
	{
		<div class="alert alert-success" role="alert">
			Welcome. You are now a registered user with unique user ID: <b>@CurrentUser.Id</b>.
			Remember this ID, it won't be provided again, and you will need it to play a game.
		</div>
	}

	<p>Current level: @CurrentUser.Level (reached in @CurrentUser.QuestLengthTicks ticks)</p>

	<ProtoFile Level="CurrentUser.Level" />
}

@code {
	[SupplyParameterFromQuery]
	public bool Welcome { get; set; } = false;

	public Swoq.Data.User? CurrentUser { get; set; } = null;

	protected async override Task OnInitializedAsync()
	{
		CurrentUser = await UserService.GetCurrentUserAsync();
	}

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		// Make sure syntax highlighting is updated after every render
		await JSRuntime.InvokeVoidAsync("hljs.highlightAll");
	}
}
