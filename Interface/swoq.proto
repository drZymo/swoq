syntax = "proto3";

import "google/protobuf/empty.proto";

package Swoq.Interface;

enum Result {
	RESULT_OK = 0;

	RESULT_INTERNAL_ERROR = 1;
	RESULT_PLAYER_ALREADY_REGISTERED = 2;
	RESULT_UNKNOWN_PLAYER = 3;
	RESULT_UNKNOWN_GAME_ID = 4;
	RESULT_LEVEL_NOT_AVAILABLE = 5;
	RESULT_QUEST_QUEUED = 6;

	RESULT_MOVE_NOT_ALLOWED = 10;
	RESULT_USE_NOT_ALLOWED = 11;
	RESULT_UNKNOWN_ACTION = 12;
	RESULT_UNKNOWN_DIRECTION = 13;
	RESULT_GAME_FINISHED = 14;
	RESULT_PLAYER1_NOT_PRESENT = 15;
	RESULT_PLAYER2_NOT_PRESENT = 16;
	RESULT_INVENTORY_FULL = 17;
	RESULT_INVENTORY_EMPTY = 18;
	RESULT_NO_SWORD = 19;
	RESULT_PLAYER1_DIED = 20;
	RESULT_PLAYER2_DIED = 21;
	RESULT_NO_PROGRESS = 22;
	RESULT_GAME_TIMEOUT = 23;
}

enum Tile {
    // Level 0 and up:
	TILE_UNKNOWN = 0;
	TILE_EMPTY = 1;
	TILE_PLAYER = 2;
	TILE_WALL = 3;
	TILE_EXIT = 4;
    // Level 2 and up:
	TILE_DOOR_RED = 5;
	TILE_KEY_RED = 6;
	TILE_DOOR_GREEN = 7;
	TILE_KEY_GREEN = 8;
	TILE_DOOR_BLUE = 9;
	TILE_KEY_BLUE = 10;
    // Level 6 and up:
	TILE_BOULDER = 11;
    // Level 7 and up:
	TILE_PRESSURE_PLATE_RED = 12;
	TILE_PRESSURE_PLATE_GREEN = 13;
	TILE_PRESSURE_PLATE_BLUE = 14;
    // Level 8 and up:
	TILE_SWORD = 15;
	TILE_HEALTH = 16;
	TILE_ENEMY = 17;
    // Level 20:
    TILE_BOSS = 19;
    TILE_TREASURE = 20;
}

enum Inventory {
	INVENTORY_NONE = 0;
    // Level 2 and up:
	INVENTORY_KEY_RED = 1;
	INVENTORY_KEY_GREEN = 2;
	INVENTORY_KEY_BLUE = 3;
    // Level 6 and up:
	INVENTORY_BOULDER = 4;
    // Level 20:
    INVENTORY_TREASURE = 5;
}

service PlayerService {
	rpc Register(RegisterRequest) returns (RegisterResponse);
	rpc GetScores(google.protobuf.Empty) returns(Scores);
}

message RegisterRequest {
	string playerName = 1;
}

message RegisterResponse {
	Result result = 1;
	optional string playerId = 2;
}

message Score {
	string playerName = 1;
	int32 level = 2;
	int32 lengthTicks = 3;
	int32 lengthSeconds = 4;
}

message Scores {
	repeated Score scores = 1;
}


service GameService {
	rpc Start(StartRequest) returns (StartResponse);
	rpc Act(ActionRequest) returns (ActionResponse);
}

message Position {
	int32 x = 1;
	int32 y = 2;
}

message PlayerState {
	Position position = 1;
	repeated Tile surroundings = 2;
	Inventory inventory = 3;
	int32 health = 4;
	bool hasSword = 5;
}

message State {
	int32 tick = 1;
	int32 level = 2;
	bool finished = 3;
	optional PlayerState player1 = 4;
	optional PlayerState player2 = 5;
}

message StartRequest {
	string playerId = 1;
	optional int32 level = 2;
}

message StartResponse {
	Result result = 1;
	optional string gameId = 2;
	optional int32 width = 3;
	optional int32 height = 4;
	optional int32 visibilityRange = 5;
	optional State state = 6;
}

enum DirectedAction {
    DIRECTEDACTION_MOVE_NORTH = 0;
    DIRECTEDACTION_MOVE_EAST = 1;
    DIRECTEDACTION_MOVE_SOUTH = 2;
    DIRECTEDACTION_MOVE_WEST = 3;
    DIRECTEDACTION_USE_NORTH = 4;
    DIRECTEDACTION_USE_EAST = 5;
    DIRECTEDACTION_USE_SOUTH = 6;
    DIRECTEDACTION_USE_WEST = 7;
}

message ActionRequest {
	string gameId = 1;
	optional DirectedAction action1 = 2;
	optional DirectedAction action2 = 3;
}

message ActionResponse {
	Result result = 1;
	optional State state = 2;
}



service QuestMonitorService {
	rpc Monitor(google.protobuf.Empty) returns (stream QuestUpdate);
}

message QuestStarted {
	string gameId = 1;
	string player = 2;
	StartRequest request = 3;
	StartResponse response = 4;
}

message QuestActed {
	string gameId = 1;
	ActionRequest request = 2;
	ActionResponse response = 3;
}

message QueueUpdate {
	repeated string queuedPlayers = 1;
}

message QuestUpdate {
	optional QuestStarted started = 1;
	optional QuestActed acted = 2;
	optional QueueUpdate queueUpdate = 3;
}




message ReplayHeader {
	string playerName = 1;
	string dateTime = 2;
}
